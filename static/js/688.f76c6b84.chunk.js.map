{"version":3,"file":"static/js/688.f76c6b84.chunk.js","mappings":"kKAIA,MAqBA,EArBqBA,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EAClC,MAAMG,EAAO,IAAIC,KAAe,IAAVH,EAAKI,IACrBC,GAAMC,EAAAA,EAAAA,IAAOJ,EAAM,QAEzB,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAEJ,KAC/BK,EAAAA,EAAAA,KAAA,OACEC,IAAK,qCAAqCX,EAAKY,QAAQ,GAAGC,cAC1DC,IAAI,eACJN,UAAU,mBAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWC,SAAA,CAAEM,KAAKC,MAAMhB,EAAKiB,KAAKC,UAAU,UAAQ,KAAG,KACvEX,EAAAA,EAAAA,MAAA,QAAMC,UAAU,WAAUC,SAAA,CAAEM,KAAKC,MAAMhB,EAAKiB,KAAKE,UAAU,UACjD,WAATlB,EAAoB,IAAM,SAEzB,ECHV,EAdiBF,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EAC9B,MAAMqB,EAAYpB,EAAKqB,KAAKC,QAAQC,GAClCA,EAAQC,OAAOC,SAAS,cAG1B,OACEf,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAChCW,EAAUM,KAAI,CAACC,EAASC,KACvBlB,EAAAA,EAAAA,KAACmB,EAAY,CAAa7B,KAAM2B,EAAS1B,KAAMA,GAA5B2B,MAEjB,C","sources":["components/ForecastCard/ForecastCard.js","components/Forecast/Forecast.js"],"sourcesContent":["import React from 'react';\r\nimport { format } from 'date-fns';\r\nimport './ForecastCard.css';\r\n\r\nconst ForecastCard = ({ data, unit }) => {\r\n  const date = new Date(data.dt * 1000);\r\n  const day = format(date, 'EEEE');\r\n\r\n  return (\r\n    <div className=\"forecast-card\">\r\n      <div className=\"forecast-day\">{day}</div>\r\n      <img\r\n        src={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\r\n        alt=\"Weather Icon\"\r\n        className=\"forecast-icon\"\r\n      />\r\n      <div className=\"forecast-temp\">\r\n        <span className=\"temp-high\">{Math.round(data.main.temp_max)}°</span> /{' '}\r\n        <span className=\"temp-low\">{Math.round(data.main.temp_min)}°</span>\r\n        {unit === 'metric' ? 'C' : 'F'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastCard;\r\n","import React from 'react';\r\nimport ForecastCard from '../ForecastCard/ForecastCard';\r\nimport './Forecast.css';\r\n\r\nconst Forecast = ({ data, unit }) => {\r\n  const dailyData = data.list.filter((reading) =>\r\n    reading.dt_txt.includes('12:00:00')\r\n  );\r\n\r\n  return (\r\n    <div className=\"forecast-container\">\r\n      {dailyData.map((dayData, index) => (\r\n        <ForecastCard key={index} data={dayData} unit={unit} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n"],"names":["_ref","data","unit","date","Date","dt","day","format","_jsxs","className","children","_jsx","src","weather","icon","alt","Math","round","main","temp_max","temp_min","dailyData","list","filter","reading","dt_txt","includes","map","dayData","index","ForecastCard"],"sourceRoot":""}